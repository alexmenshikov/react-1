{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  products: []\n};\nexport const productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ActionTypes.SET_PRODUCTS:\n      console.warn(\"3. reducer - рендера карточек\");\n      return { ...state,\n        products: payload\n      };\n\n    case ActionTypes.FAVORITE_PRODUCTS:\n      console.warn(\"3. reducer - favorite\");\n    // return state.filter(product => product.id !== payload);\n\n    case ActionTypes.REMOVE_PRODUCTS:\n      console.warn(\"3. reducer - удаления\"); // const updateProduct = state.map((product) => product.id === payload && product);\n      // return state;\n\n      return { ...state,\n        products: payload\n      };\n    // case ActionTypes.REMOVE_PRODUCTS:\n    // \treturn {\n    // \t\tproduct: state.filter((product) => product.id !== payload && product),\n    // \t};\n    // case ActionTypes.REMOVE_PRODUCTS:\n    // \tconst filterProducts = state.filter((product) => product.id !== payload && product);\n    // \tstate = filterProducts;\n    // \treturn state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/menshikov/Documents/html:css/Alfa-bank-test/src/redux/reducers/productReducer.js"],"names":["ActionTypes","initialState","products","productReducer","state","type","payload","SET_PRODUCTS","console","warn","FAVORITE_PRODUCTS","REMOVE_PRODUCTS"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,cAAc,GAAG,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCH,YAAoC;AAAA,MAAtB;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC1E,UAAQD,IAAR;AACC,SAAKL,WAAW,CAACO,YAAjB;AACCC,MAAAA,OAAO,CAACC,IAAR,CAAa,+BAAb;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA,QAAQ,EAAEI;AAAtB,OAAP;;AAED,SAAKN,WAAW,CAACU,iBAAjB;AACCF,MAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AAIA;;AAED,SAAKT,WAAW,CAACW,eAAjB;AACCH,MAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb,EADD,CAEC;AACA;;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA,QAAQ,EAAEI;AAAtB,OAAP;AAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACC,aAAOF,KAAP;AA7BF;AA+BA,CAhCM","sourcesContent":["import { ActionTypes } from \"../constants/action-types\";\n\nconst initialState = {\n\tproducts: [],\n};\n\nexport const productReducer = (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase ActionTypes.SET_PRODUCTS:\n\t\t\tconsole.warn(\"3. reducer - рендера карточек\");\n\t\t\treturn { ...state, products: payload };\n\n\t\tcase ActionTypes.FAVORITE_PRODUCTS:\n\t\t\tconsole.warn(\"3. reducer - favorite\");\n\n\n\n\t\t\t// return state.filter(product => product.id !== payload);\n\n\t\tcase ActionTypes.REMOVE_PRODUCTS:\n\t\t\tconsole.warn(\"3. reducer - удаления\");\n\t\t\t// const updateProduct = state.map((product) => product.id === payload && product);\n\t\t\t// return state;\n\t\t\treturn { ...state, products: payload };\n\n\t\t// case ActionTypes.REMOVE_PRODUCTS:\n\t\t// \treturn {\n\t\t// \t\tproduct: state.filter((product) => product.id !== payload && product),\n\t\t// \t};\n\n\t\t// case ActionTypes.REMOVE_PRODUCTS:\n\t\t// \tconst filterProducts = state.filter((product) => product.id !== payload && product);\n\t\t// \tstate = filterProducts;\n\t\t// \treturn state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}